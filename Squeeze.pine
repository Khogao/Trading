//@version=6
indicator("Squeeze Momentum Indicator [LazyBear] (v6 fixed)", shorttitle="SQZMOM_LB v6", overlay=false)

// Inputs
lengthBB  = input.int(20,  "BB Length")
multBB    = input.float(2.0, "BB MultFactor")
lengthKC  = input.int(20,  "KC Length")
multKC    = input.float(1.5, "KC MultFactor")
useTrueRange = input.bool(true, "Use TrueRange for KC")

// Source
source = close

// --- Bollinger Bands (fixed: use multBB, not multKC)
basis   = ta.sma(source, lengthBB)
dev     = multBB * ta.stdev(source, lengthBB)
upperBB = basis + dev
lowerBB = basis - dev

// --- Keltner Channels (use TR smoothing)
rangeRaw = useTrueRange ? ta.tr(true) : (high - low)
rangema  = ta.sma(rangeRaw, lengthKC)
ma       = ta.sma(source, lengthKC)
upperKC  = ma + rangema * multKC
lowerKC  = ma - rangema * multKC

// --- Squeeze states
sqzOn  = (lowerBB > lowerKC) and (upperBB < upperKC)
sqzOff = (lowerBB < lowerKC) and (upperBB > upperKC)
noSqz  = not sqzOn and not sqzOff

// --- Momentum core (same formula, updated API)
donchMid = math.avg(ta.highest(high, lengthKC), ta.lowest(low, lengthKC))
anchor   = math.avg(donchMid, ta.sma(close, lengthKC))
val      = ta.linreg(source - anchor, lengthKC, 0)

// Colors
bcolor = val > 0
    ? (val > nz(val[1]) ? color.lime : color.green)
    : (val < nz(val[1]) ? color.red  : color.maroon)
scolor = noSqz ? color.blue : (sqzOn ? color.black : color.gray)

// Plots
plot(val, color=bcolor, style=plot.style_histogram, linewidth=4, title="Histogram")
plot(0,   color=scolor, style=plot.style_cross,      linewidth=2, title="Zero/Squeeze")

// Alerts
alertcondition(sqzOn,  title="Squeeze On",  message="SQZMOM: Squeeze ON")
alertcondition(sqzOff, title="Squeeze Off", message="SQZMOM: Squeeze OFF")
alertcondition(ta.crossover(val, 0), title="Momentum Cross Up",   message="SQZMOM: Momentum crossed above 0")
alertcondition(ta.crossunder(val, 0), title="Momentum Cross Down", message="SQZMOM: Momentum crossed below 0")