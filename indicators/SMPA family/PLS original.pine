// © 2025 Gemini AI - Phi's Trade System (v4.1 - Clearer Signals)
// @version=5
// THAY ĐỔI: Đơn giản hóa màu sắc tín hiệu. Mua = Xanh, Bán = Đỏ để dễ nhận biết.
indicator("PLS v4.1 (Clear Signals)", shorttitle="PLS v4.1", overlay=true, max_labels_count=500)

// --- PHẦN 0: CÁC HÀM TÙY CHỈNH ---
f_manualSum(source, length) =>
    _sum = 0.0
    for i = 0 to length - 1
        _sum += nz(source[i])
    _sum

// --- PHẦN 1: BẢNG ĐIỀU KHIỂN & CÀI ĐẶT ---
var string GRP_DISPLAY = "Cai Dat Hien Thi"
textColorOption = input.string("Den", title="Mau Chu Cho Bang", options=["Den", "Trang"], group=GRP_DISPLAY)
var color dynamicTextColor = textColorOption == "Den" ? color.black : color.white
showEmaLabels = input.bool(true, title="Bat/Tat Nhan EMA Dong", group=GRP_DISPLAY)

var string GRP_ACTION_LOGIC = "Logic Vao Lenh (PLS Core)"
ema_dai_han = input.int(200, title="EMA Xu Huong", group=GRP_ACTION_LOGIC)
ema_trung_han = input.int(50, title="EMA Pullback", group=GRP_ACTION_LOGIC)
macd_fast = input.int(12, title="MACD Fast", group=GRP_ACTION_LOGIC)
macd_slow = input.int(26, title="MACD Slow", group=GRP_ACTION_LOGIC)
macd_signal = input.int(9, title="MACD Signal", group=GRP_ACTION_LOGIC)
useRsiFilter = input.bool(true, title="Bat/Tat Bo Loc RSI", group=GRP_ACTION_LOGIC)
rsiLevel = input.float(50, title="Nguong RSI", group=GRP_ACTION_LOGIC)

var string GRP_VSA_CONTEXT = "Bo loc Boi Canh (VSA)"
vsa_lookback = input.int(20, title="VSA Lookback", group=GRP_VSA_CONTEXT)
vsa_volMultiplier = input.float(2.0, title="VSA Vol Multiplier", group=GRP_VSA_CONTEXT)
vsa_scoreLookback = input.int(20, title="VSA Score Lookback", group=GRP_VSA_CONTEXT)
vsa_recentSignalLookback = input.int(5, title="Tim Kiem Tin Hieu VSA Gan Nhat (so nen)", group=GRP_VSA_CONTEXT)

var string GRP_VP_CONTEXT = "Bo loc Boi Canh (Value Area)"
showVALines = input.bool(false, title="Hien Thi Duong POC, VAH, VAL", group=GRP_VP_CONTEXT)
vpLookback = input.int(240, title="Do Dai Tinh Toan VA (so nen)", group=GRP_VP_CONTEXT)
vpProximityPercent = input.float(0.2, title="Bien do Tim kiem quanh duong VA (%)", group=GRP_VP_CONTEXT)

var string GRP_OBV_CONTEXT = "Bo loc Boi Canh (OBV)"
obv_divergenceLookback = input.int(25, title="Do Dai Tim Phan Ky OBV", group=GRP_OBV_CONTEXT, tooltip="Số nến quét ngược lại để tìm phân kỳ giữa giá và OBV.")

var string GRP_RISK = "Quan Ly Rui Ro"
vonGoc = input.float(500, title="Tong So Von (USDT)", group=GRP_RISK)
ruiRoMoiLenh = input.float(2.0, title="Rui Ro Moi Lenh (%)", group=GRP_RISK)
atrLength = input.int(14, title="Do Dai ATR", group=GRP_RISK)
atrMultiplier = input.float(1.5, title="He So Nhan ATR", group=GRP_RISK)
rr1 = input.float(1.5, title="Ty Le R:R cho TP 1", group=GRP_RISK)
rr2 = input.float(3.0, title="Ty Le R:R cho TP 2", group=GRP_RISK)

// --- PHẦN 2: TÍNH TOÁN CÁC BỘ LỌC BỐI CẢNH ---
float lookback_high = ta.highest(high, vpLookback)
float lookback_low = ta.lowest(low, vpLookback)

var line pocLine = na, var line vahLine = na, var line valLine = na
var float dPOC = na, var float dVAH = na, var float dVAL = na
if barstate.islast and showVALines
    int rowCount = 200, var price_rows = array.new_float(rowCount, 0), var volume_rows = array.new_float(rowCount, 0)
    float step_price = (lookback_high - lookback_low) / (rowCount - 1)
    if step_price > 0
        for i = 0 to rowCount - 1
            array.set(price_rows, i, lookback_low + step_price * i), array.set(volume_rows, i, 0)
        total_volume = 0.0
        for i = 0 to vpLookback - 1
            vol = volume[i], price = (high[i] + low[i]) / 2, total_volume += vol
            int price_row_index = math.round((price - lookback_low) / step_price)
            if price_row_index >= 0 and price_row_index < rowCount
                array.set(volume_rows, price_row_index, array.get(volume_rows, price_row_index) + vol)
        float poc_volume = array.max(volume_rows), int poc_index = array.indexof(volume_rows, poc_volume)
        dPOC := array.get(price_rows, poc_index)
        float va_volume_target = total_volume * 0.7, float va_volume_current = poc_volume
        int up_index = poc_index + 1, int down_index = poc_index - 1
        while va_volume_current < va_volume_target and (up_index < rowCount or down_index >= 0)
            vol_up = up_index < rowCount ? array.get(volume_rows, up_index) : 0, vol_down = down_index >= 0 ? array.get(volume_rows, down_index) : 0
            if vol_up == 0 and vol_down == 0
                break
            if vol_up > vol_down
                va_volume_current += vol_up, up_index += 1
            else
                va_volume_current += vol_down, down_index -= 1
        dVAH := array.get(price_rows, math.min(rowCount - 1, up_index - 1)), dVAL := array.get(price_rows, math.max(0, down_index + 1))
        line.delete(pocLine), line.delete(vahLine), line.delete(valLine)
        pocLine := line.new(bar_index - vpLookback, dPOC, bar_index, dPOC, color=color.new(color.yellow, 25), width=2)
        vahLine := line.new(bar_index - vpLookback, dVAH, bar_index, dVAH, color=color.new(color.red, 25), width=2)
        valLine := line.new(bar_index - vpLookback, dVAL, bar_index, dVAL, color=color.new(color.green, 25), width=2)

// Tính toán VSA
isDownBar = close < open
isUpBar = close > open
lowestLow = ta.lowest(low, vsa_lookback)[1]
isSpring = low < lowestLow and close > lowestLow and volume > (ta.sma(volume, vsa_lookback) * vsa_volMultiplier)
highestHigh = ta.highest(high, vsa_lookback)[1]
isUpthrust = high > highestHigh and close < highestHigh and volume > (ta.sma(volume, vsa_lookback) * vsa_volMultiplier)
isClimacticVol = volume == ta.highest(volume, vsa_lookback)
isSellingClimax = isClimacticVol and isDownBar
isBuyingClimax = isClimacticVol and isUpBar
bullishSignal = isSpring ? 2.0 : isSellingClimax ? 1.5 : 0.0
bearishSignal = isUpthrust ? -2.0 : isBuyingClimax ? -1.5 : 0.0
barScore = bullishSignal + bearishSignal
vsaScore = f_manualSum(barScore, vsa_scoreLookback)
isNearVA(price) => (math.abs(price - dPOC) / dPOC * 100 < vpProximityPercent) or (math.abs(price - dVAH) / dVAH * 100 < vpProximityPercent) or (math.abs(price - dVAL) / dVAL * 100 < vpProximityPercent)

// Tính toán OBV và Phân kỳ
obv = ta.cum(math.sign(ta.change(close)) * volume)
highestHighPrice = ta.highest(high, obv_divergenceLookback)[1]
highestHighOBV = ta.highest(obv, obv_divergenceLookback)[1]
bearishOBVDivergence = (high > highestHighPrice) and (obv < highestHighOBV)
lowestLowPrice = ta.lowest(low, obv_divergenceLookback)[1]
lowestLowOBV = ta.lowest(obv, obv_divergenceLookback)[1]
bullishOBVDivergence = (low < lowestLowPrice) and (obv > lowestLowOBV)

// --- PHẦN 3: LOGIC VÀO LỆNH CỐT LÕI (PLS CORE) ---
ema200 = ta.ema(close, ema_dai_han)
ema50 = ta.ema(close, ema_trung_han)
vol_trung_binh = ta.sma(volume, 20)
[macdLine, signalLine, _] = ta.macd(close, macd_fast, macd_slow, macd_signal)
rsi = ta.rsi(close, 14)
dieuKienMua_raw = (close > ema200) and (low < ema50 and close > ema50) and ta.crossover(macdLine, signalLine) and (volume > vol_trung_binh) and (useRsiFilter ? rsi > rsiLevel : true)
tinHieuMua = dieuKienMua_raw and not dieuKienMua_raw[1]
dieuKienBan_raw = (close < ema200) and (high > ema50 and close < ema50) and ta.crossunder(macdLine, signalLine) and (volume > vol_trung_binh) and (useRsiFilter ? rsi < rsiLevel : true)
tinHieuBan = dieuKienBan_raw and not dieuKienBan_raw[1]

bool recentMajorBullishSignal = ta.barssince(isSpring or isSellingClimax) < vsa_recentSignalLookback
bool recentMajorBearishSignal = ta.barssince(isUpthrust or isBuyingClimax) < vsa_recentSignalLookback

// --- PHẦN 4: HỆ THỐNG XẾP HẠNG TÍN HIỆU (NÂNG CẤP) ---
var string signalGrade = na
var color signalColor = na

if tinHieuMua
    bool isNearSupportVA = showVALines and isNearVA(low)
    // Xác định Hạng tín hiệu
    if isNearSupportVA and recentMajorBullishSignal and bullishOBVDivergence
        signalGrade := "S+"
    else if isNearSupportVA and recentMajorBullishSignal
        signalGrade := "S"
    else if vsaScore > 0 and vsaScore > vsaScore[1]
        signalGrade := "A"
    else
        signalGrade := "B"
    // **THAY ĐỔI**: Gán màu XANH cho TẤT CẢ tín hiệu Mua
    signalColor := color.new(color.green, 0)

if tinHieuBan
    bool isNearResistanceVA = showVALines and isNearVA(high)
    // Xác định Hạng tín hiệu
    if isNearResistanceVA and recentMajorBearishSignal and bearishOBVDivergence
        signalGrade := "S+"
    else if isNearResistanceVA and recentMajorBearishSignal
        signalGrade := "S"
    else if vsaScore < 0 and vsaScore < vsaScore[1]
        signalGrade := "A"
    else
        signalGrade := "B"
    // **THAY ĐỔI**: Gán màu ĐỎ cho TẤT CẢ tín hiệu Bán
    signalColor := color.new(color.red, 0)

// --- PHẦN 5: HÀM VẼ KẾ HOẠCH GIAO DỊCH ---
f_drawTradePlan(isLong, entryPrice, grade, colorOfSignal) =>
    slAtr = ta.atr(atrLength) * atrMultiplier
    stopLoss = isLong ? entryPrice - slAtr : entryPrice + slAtr
    riskRange = math.abs(entryPrice - stopLoss)
    takeProfit1 = isLong ? entryPrice + riskRange * rr1 : entryPrice - riskRange * rr1
    takeProfit2 = isLong ? entryPrice + riskRange * rr2 : entryPrice - riskRange * rr2
    riskAmount = (vonGoc * ruiRoMoiLenh) / 100
    positionSize = riskRange > 0 ? riskAmount / riskRange : 0
    string labelText = (isLong ? "L" : "S") + " (" + grade + ")"
    string planTooltip = "Ke Hoach " + (isLong ? "LONG" : "SHORT") + " (Hang " + grade + "):\n" + "Entry: " + str.tostring(entryPrice, "#.##") + "\n" + "Stop-Loss: " + str.tostring(stopLoss, "#.##") + "\n" + "TP 1 (R:R " + str.tostring(rr1) + "): " + str.tostring(takeProfit1, "#.##") + "\n" + "TP 2 (R:R " + str.tostring(rr2) + "): " + str.tostring(takeProfit2, "#.##") + "\n" + "--------------------\n" + "RUI RO: " + str.tostring(riskAmount, "#.##") + " USDT\n" + "KHOI LUONG: " + str.tostring(positionSize, "#.####")
    label.new(bar_index, na, text=labelText, yloc=isLong ? yloc.belowbar : yloc.abovebar, color=colorOfSignal, textcolor=dynamicTextColor, style=isLong ? label.style_label_up : label.style_label_down, tooltip=planTooltip, size= grade == "S+" or grade == "S" ? size.large : size.normal)
    line.new(bar_index, stopLoss, bar_index + 1, stopLoss, color=color.red, width=2)
    line.new(bar_index, takeProfit1, bar_index + 1, takeProfit1, color=color.teal, width=2)
    line.new(bar_index, takeProfit2, bar_index + 1, takeProfit2, color=color.blue, width=2)

// --- PHẦN 6: GỌI HÀM VẼ & CÁC THÀNH PHẦN KHÁC ---
plot(ema200, title="EMA Xu Huong", color=color.purple, linewidth=2)
plot(ema50, title="EMA Pullback", color=color.orange, linewidth=2)

if tinHieuMua
    f_drawTradePlan(true, close, signalGrade, signalColor)
if tinHieuBan
    f_drawTradePlan(false, close, signalGrade, signalColor)

if barstate.islast and showEmaLabels
    label.new(bar_index, ema200, text="EMA " + str.tostring(ema_dai_han), xloc=xloc.bar_index, yloc=yloc.price, style=label.style_none, textcolor=color.purple)
    label.new(bar_index, ema50, text="EMA " + str.tostring(ema_trung_han), xloc=xloc.bar_index, yloc=yloc.price, style=label.style_none, textcolor=color.orange)

// --- PHẦN 7: TẠO CẢNH BÁO ---
if (tinHieuMua or tinHieuBan)
    string gradeText = na(signalGrade) ? "N/A" : signalGrade
    string alertMessage = "Tin hieu PLS v4.1 moi! Hang: " + gradeText
    alert(alertMessage, freq = alert.freq_once_per_bar)