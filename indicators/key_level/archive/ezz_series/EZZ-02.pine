//@version=5
indicator("EZZ1", overlay=true, max_boxes_count=60)

// --- Inputs (giữ đơn giản) ---
vol_multiplier   = input.float(2.0, title="Volume Spike Multiplier", minval=1.0)
trap_zone_length = input.int(3,      title="Trap Zone Length (bars)")
lookback         = input.int(20,     title="Volume Lookback Period")
sr_tol           = input.float(0.002, title="S/R proximity tolerance", step=0.0001, minval=0.0001)
max_trap_boxes   = input.int(5,      title="Max trap boxes", minval=0)

show_sr_all      = input.bool(true,  title="Show S/R (all)")
sr_live          = input.bool(true,  title="S/R live (may repaint)")

show_native_lines = input.bool(true,  title="Show Native S/R")
show_m1_lines     = input.bool(false, title="Show M1 S/R")
show_m5_lines     = input.bool(true,  title="Show M5 S/R")
show_m15_lines    = input.bool(true,  title="Show M15 S/R")
show_m30_lines    = input.bool(true,  title="Show M30 S/R")
show_h1_lines     = input.bool(true,  title="Show H1 S/R")
show_h4_lines     = input.bool(true,  title="Show H4 S/R")
show_d1_lines     = input.bool(true,  title="Show D1 S/R")

// KV (gọn): chỉ Price Line Bull/Bear + vài ngưỡng cơ bản
kv_group            = "KV • Detection & Visuals"
kv_show_price_line  = input.bool(true,  title="Show KV Price Lines",      group="KV • Detection & Visuals")
kv_pl_width         = input.int(1,      title="KV Price Line width",      minval=1, maxval=3, group="KV • Detection & Visuals")
kv_confirm_on_close = input.bool(true,  title="KV confirm on close",      group="KV • Detection & Visuals")
kv_atr_len          = input.int(14,     title="KV ATR length",            minval=1,         group="KV • Detection & Visuals")
kv_min_body_atr     = input.float(0.10, title="KV min body vs ATR",       minval=0.0, step=0.01, group="KV • Detection & Visuals")
kv_wick_mult        = input.float(1.5,  title="KV wick/body ratio",       minval=0.5, step=0.1,  group="KV • Detection & Visuals")
// Chọn TF nền cho KV (chỉ 30m/1h/4h)
kv_tf_base          = input.string("60", title="KV base timeframe", options=["30","60","240"], group="KV • Detection & Visuals")

// NEW: KV Zones (simple)
kv_show_zones      = input.bool(true,  title="Show KV Zones",                 group="KV • Detection & Visuals")
kv_zone_len        = input.int(3,      title="KV zone swing len (bars)",      minval=1, maxval=10, group="KV • Detection & Visuals")
kv_zone_atr        = input.float(0.8,  title="KV zone height (x ATR)",        minval=0.1, step=0.1, group="KV • Detection & Visuals")
kv_zone_extend     = input.int(120,    title="KV zone extend (bars)",         minval=10, maxval=500, group="KV • Detection & Visuals")
kv_zone_alpha      = input.int(85,     title="KV zone transparency (0–100)",  minval=0, maxval=100, group="KV • Detection & Visuals")
// thêm pad để chỉnh vị trí zone
kv_pad_bear_atr    = input.float(0.20, title="KV Bear pad (x ATR)", minval=0, step=0.05, group="KV • Detection & Visuals")
kv_pad_bull_atr    = input.float(0.20, title="KV Bull pad (x ATR)", minval=0, step=0.05, group="KV • Detection & Visuals")
// NEW: swing lookback (LTF bars) để neo zone sát đáy/đỉnh bên trái hơn
kv_swing_lb        = input.int(60,     title="KV swing lookback (LTF bars)", minval=5, maxval=400, group="KV • Detection & Visuals")

// --- Add missing variable declarations ---
kv_throttle_bars   = input.int(5, title="KV throttle bars", minval=1, group="KV • Detection & Visuals")
kv_show_labels     = input.bool(true, title="Show KV Zone Labels", group="KV • Detection & Visuals")
kv_zone_invalidate = input.bool(true, title="Invalidate KV Zone on price cross", group="KV • Detection & Visuals")
kv_max_age_htf     = input.int(10, title="KV Zone Max Age (HTF bars, 0=off)", minval=0, group="KV • Detection & Visuals")
// NEW: debug toggle
kv_debug_events    = input.bool(false, title="Show KV debug triangles", group="KV • Detection & Visuals")

// ========== Signals options ==========
sig_group          = "Signals • Entries"
sig_show           = input.bool(true,  title="Show Buy/Sell",                   group=sig_group)
sig_retest_only    = input.bool(true,  title="Only take retest inside KV",      group=sig_group)
sig_min_body_atr   = input.float(0.20, title="Signal: min body vs ATR",  step=0.01, minval=0.0, group=sig_group)
sig_wick_rej_mult  = input.float(1.5,  title="Signal: wick/body ratio",  step=0.1,  minval=0.5, group=sig_group)
sig_use_volume     = input.bool(true,  title="Require volume spike",            group=sig_group)
sig_throttle_bars  = input.int(6,      title="Signal throttle (bars)",  minval=1,  group=sig_group)

// Lưu trạng thái throttle tín hiệu qua các bar
var int last_b_bar = na
var int last_s_bar = na

// --- KV calc TF chọn theo TF chart: < 15m dùng 5m, ngược lại dùng 15m ---
// Use a constant default value for input.string, then set kv_tf_active dynamically
kv_tf_active_input = input.string("15", title="KV active TF", options=["5","15"])
kv_tf_active = timeframe.in_seconds(timeframe.period) >= timeframe.in_seconds("15") ? "15" : "5"

// TRIGGERS trên TF active + lọc body/ATR và wick/body để giảm nhiễu
// Helper functions for security callback
kv_bear_trigger(_close, _open, _high, _kv_confirm_on_close, _zone_len, _kv_min_body_atr, _kv_atr_len, _kv_wick_mult, _mintick) =>
    hh = ta.highest(_close, _zone_len)[1]
    srcU = _kv_confirm_on_close ? _close : _high
    crossed = ta.crossover(srcU, hh)
    atrv = ta.atr(_kv_atr_len)
    body = math.abs(_close - _open)
    upW = _high - math.max(_open, _close)
    crossed and (body >= _kv_min_body_atr * atrv) and (upW / math.max(body, _mintick) >= _kv_wick_mult)

kv_bull_trigger(_close, _open, _low, _kv_confirm_on_close, _zone_len, _kv_min_body_atr, _kv_atr_len, _kv_wick_mult, _mintick) =>
    ll = ta.lowest(_close, _zone_len)[1]
    srcD = _kv_confirm_on_close ? _close : _low
    crossed = ta.crossunder(srcD, ll)
    atrv = ta.atr(_kv_atr_len)
    body = math.abs(_close - _open)
    dnW = math.min(_open, _close) - _low
    crossed and (body >= _kv_min_body_atr * atrv) and (dnW / math.max(body, _mintick) >= _kv_wick_mult)

kv_evt_bear_once = request.security(syminfo.tickerid, kv_tf_active, kv_bear_trigger(close, open, high, kv_confirm_on_close, kv_zone_len, kv_min_body_atr, kv_atr_len, kv_wick_mult, syminfo.mintick), barmerge.gaps_off, barmerge.lookahead_off)
kv_evt_bull_once = request.security(syminfo.tickerid, kv_tf_active, kv_bull_trigger(close, open, low, kv_confirm_on_close, kv_zone_len, kv_min_body_atr, kv_atr_len, kv_wick_mult, syminfo.mintick), barmerge.gaps_off, barmerge.lookahead_off)
// (tùy chọn) vẽ dấu debug — mặc định tắt
plotshape(kv_debug_events and kv_evt_bear_once, title="KV bear trig", style=shape.triangledown, color=color.red,   location=location.abovebar, size=size.tiny)
plotshape(kv_debug_events and kv_evt_bull_once, title="KV bull trig", style=shape.triangleup,   color=color.green, location=location.belowbar, size=size.tiny)

// Confirm HTF logic (giữ nguyên)
confirm_htf        = true

// HTF high/low/ATR: dùng TF active (5m hoặc 15m)
high_htf           = request.security(syminfo.tickerid, kv_tf_active, high,               barmerge.gaps_off, barmerge.lookahead_off)
low_htf            = request.security(syminfo.tickerid, kv_tf_active, low,                barmerge.gaps_off, barmerge.lookahead_off)
atr_kv_htf         = request.security(syminfo.tickerid, kv_tf_active, ta.atr(kv_atr_len), barmerge.gaps_off, barmerge.lookahead_off)

// HTF index để throttle/age trên TF active
time_htf = request.security(syminfo.tickerid, kv_tf_active, time,      barmerge.gaps_off, barmerge.lookahead_off)
seq_htf  = request.security(syminfo.tickerid, kv_tf_active, bar_index, barmerge.gaps_off, barmerge.lookahead_off)
throttle_htf = math.max(1, kv_throttle_bars)

// Swings: cũng tính trên TF active (thay vì TF chart) để ổn định
ltf_high_swing = request.security(syminfo.tickerid, kv_tf_active, ta.highest(high, kv_swing_lb), barmerge.gaps_off, barmerge.lookahead_off)
ltf_low_swing  = request.security(syminfo.tickerid, kv_tf_active, ta.lowest(low,  kv_swing_lb),  barmerge.gaps_off, barmerge.lookahead_off)

// --- KV Zones: strictly 1 zone per side + max age + labels ---
var box   kv_bear_box = na
var box   kv_bull_box = na
var float kv_bear_top = na
var float kv_bear_bot = na
var float kv_bull_top = na
var float kv_bull_bot = na
var int   kv_bear_seq = na
var int   kv_bull_seq = na
var label kv_bear_lbl = na
var label kv_bull_lbl = na

// Bear zone: tạo ngay khi có tín hiệu (sau throttle), không yêu cầu cao hơn lần trước
if kv_show_zones and kv_evt_bear_once and confirm_htf
    new_top = math.max(high_htf, ltf_high_swing) + atr_kv_htf * kv_pad_bear_atr
    new_bot = new_top - atr_kv_htf * kv_zone_atr
    can_new = na(kv_bear_seq) or (seq_htf - kv_bear_seq >= throttle_htf)
    if can_new
        if not na(kv_bear_box)
            box.delete(kv_bear_box)
            if not na(kv_bear_lbl)
                label.delete(kv_bear_lbl)
        kv_bear_top := new_top
        kv_bear_bot := new_bot
        kv_bear_seq := seq_htf
        kv_bear_box := box.new(left=bar_index, top=kv_bear_top, right=bar_index + kv_zone_extend, bottom=kv_bear_bot)
        box.set_border_color(kv_bear_box, color.red)
        box.set_bgcolor(kv_bear_box, color.new(color.red, kv_zone_alpha))
        if kv_show_labels
            kv_bear_lbl := label.new(bar_index, kv_bear_top, "KV for Bear", style=label.style_label_down, textcolor=color.red, color=color.new(color.red, 90), size=size.tiny)
    else if not na(kv_bear_box)
        box.set_right(kv_bear_box, bar_index + kv_zone_extend)

// Bull zone: hạ thấp theo min(HTF low, swing-low LTF trái) rồi trừ pad
if kv_show_zones and kv_evt_bull_once and confirm_htf
    base_low = math.min(low_htf, ltf_low_swing)
    new_bot = base_low - atr_kv_htf * kv_pad_bull_atr
    new_top = new_bot + atr_kv_htf * kv_zone_atr
    can_new = na(kv_bull_seq) or (seq_htf - kv_bull_seq >= throttle_htf)
    if can_new
        if not na(kv_bull_box)
            box.delete(kv_bull_box)
            if not na(kv_bull_lbl)
                label.delete(kv_bull_lbl)
        kv_bull_bot := new_bot
        kv_bull_top := new_top
        kv_bull_seq := seq_htf
        kv_bull_box := box.new(left=bar_index, top=kv_bull_top, right=bar_index + kv_zone_extend, bottom=kv_bull_bot)
        box.set_border_color(kv_bull_box, color.green)
        box.set_bgcolor(kv_bull_box, color.new(color.green, kv_zone_alpha))
        if kv_show_labels
            kv_bull_lbl := label.new(bar_index, kv_bull_bot, "KV for Bull", style=label.style_label_up, textcolor=color.green, color=color.new(color.green, 90), size=size.tiny)
    else if not na(kv_bull_box)
        box.set_right(kv_bull_box, bar_index + kv_zone_extend)

// Giữ nhãn ở bar mới nhất
if kv_show_zones and kv_show_labels
    if not na(kv_bear_lbl)
        label.set_x(kv_bear_lbl, bar_index), label.set_y(kv_bear_lbl, kv_bear_top)
    if not na(kv_bull_lbl)
        label.set_x(kv_bull_lbl, bar_index), label.set_y(kv_bull_lbl, kv_bull_bot)

// Invalidate: chỉ từ bar sau khi tạo (tránh co về 0 ngay lập tức)
if kv_show_zones and kv_zone_invalidate
    if not na(kv_bear_box) and bar_index > box.get_left(kv_bear_box) and close > kv_bear_top and box.get_right(kv_bear_box) > bar_index
        box.set_right(kv_bear_box, bar_index)
    if not na(kv_bull_box) and bar_index > box.get_left(kv_bull_box) and close < kv_bull_bot and box.get_right(kv_bull_box) > bar_index
        box.set_right(kv_bull_box, bar_index)

// Max age filter: only if > 0
if kv_show_zones and kv_max_age_htf > 0
    if not na(kv_bear_seq) and (seq_htf - kv_bear_seq > kv_max_age_htf)
        if not na(kv_bear_box)
            box.delete(kv_bear_box)
        if not na(kv_bear_lbl)
            label.delete(kv_bear_lbl)
        kv_bear_box := na, kv_bear_lbl := na
        kv_bear_top := na, kv_bear_bot := na, kv_bear_seq := na
    if not na(kv_bull_seq) and (seq_htf - kv_bull_seq > kv_max_age_htf)
        if not na(kv_bull_box)
            box.delete(kv_bull_box)
        if not na(kv_bull_lbl)
            label.delete(kv_bull_lbl)
        kv_bull_box := na, kv_bull_lbl := na
        kv_bull_top := na, kv_bull_bot := na, kv_bull_seq := na

// NEW: luôn tính KV cho 5m và 15m, chọn hiển thị theo TF chart
string KV_TF_5  = "5"
string KV_TF_15 = "15"
bool   show_15  = timeframe.in_seconds(timeframe.period) >= timeframe.in_seconds("15")

// ========== KV CORE (5m + 15m) ==========
// confirm_htf = true  // Removed duplicate declaration

// Common throttle per-TF
int throttle_bars = math.max(1, kv_throttle_bars)

// ----- Series cho 5m -----
bool  kv5_evt_bear_once = request.security(syminfo.tickerid, KV_TF_5,
     ta.crossover(kv_confirm_on_close ? close : high, ta.highest(close, kv_zone_len)[1]),
     barmerge.gaps_off, barmerge.lookahead_off)
bool  kv5_evt_bull_once = request.security(syminfo.tickerid, KV_TF_5,
     ta.crossunder(kv_confirm_on_close ? close : low, ta.lowest(close, kv_zone_len)[1]),
     barmerge.gaps_off, barmerge.lookahead_off)

float kv5_high_htf = request.security(syminfo.tickerid, KV_TF_5, high,               barmerge.gaps_off, barmerge.lookahead_off)
float kv5_low_htf  = request.security(syminfo.tickerid, KV_TF_5, low,                barmerge.gaps_off, barmerge.lookahead_off)
float kv5_atr      = request.security(syminfo.tickerid, KV_TF_5, ta.atr(kv_atr_len), barmerge.gaps_off, barmerge.lookahead_off)
float kv5_swing_hi = request.security(syminfo.tickerid, KV_TF_5, ta.highest(high, kv_swing_lb), barmerge.gaps_off, barmerge.lookahead_off)
float kv5_swing_lo = request.security(syminfo.tickerid, KV_TF_5, ta.lowest(low,  kv_swing_lb),  barmerge.gaps_off, barmerge.lookahead_off)
int   kv5_seq      = request.security(syminfo.tickerid, KV_TF_5, bar_index, barmerge.gaps_off, barmerge.lookahead_off)
float kv5_close    = request.security(syminfo.tickerid, KV_TF_5, close,     barmerge.gaps_off, barmerge.lookahead_off)

// ----- Series cho 15m -----
bool  kv15_evt_bear_once = request.security(syminfo.tickerid, KV_TF_15,
     ta.crossover(kv_confirm_on_close ? close : high, ta.highest(close, kv_zone_len)[1]),
     barmerge.gaps_off, barmerge.lookahead_off)
bool  kv15_evt_bull_once = request.security(syminfo.tickerid, KV_TF_15,
     ta.crossunder(kv_confirm_on_close ? close : low, ta.lowest(close, kv_zone_len)[1]),
     barmerge.gaps_off, barmerge.lookahead_off)

float kv15_high_htf = request.security(syminfo.tickerid, KV_TF_15, high,               barmerge.gaps_off, barmerge.lookahead_off)
float kv15_low_htf  = request.security(syminfo.tickerid, KV_TF_15, low,                barmerge.gaps_off, barmerge.lookahead_off)
float kv15_atr      = request.security(syminfo.tickerid, KV_TF_15, ta.atr(kv_atr_len), barmerge.gaps_off, barmerge.lookahead_off)
float kv15_swing_hi = request.security(syminfo.tickerid, KV_TF_15, ta.highest(high, kv_swing_lb), barmerge.gaps_off, barmerge.lookahead_off)
float kv15_swing_lo = request.security(syminfo.tickerid, KV_TF_15, ta.lowest(low,  kv_swing_lb),  barmerge.gaps_off, barmerge.lookahead_off)
int   kv15_seq      = request.security(syminfo.tickerid, KV_TF_15, bar_index, barmerge.gaps_off, barmerge.lookahead_off)
float kv15_close    = request.security(syminfo.tickerid, KV_TF_15, close,     barmerge.gaps_off, barmerge.lookahead_off)

// DEBUG triggers
plotshape(kv_debug_events and kv5_evt_bear_once,  title="KV5 bear",  style=shape.triangledown, location=location.abovebar, color=color.new(color.red,   40), size=size.tiny)
plotshape(kv_debug_events and kv5_evt_bull_once,  title="KV5 bull",  style=shape.triangleup,   location=location.belowbar, color=color.new(color.green, 40), size=size.tiny)
plotshape(kv_debug_events and kv15_evt_bear_once, title="KV15 bear", style=shape.triangledown, location=location.top,      color=color.new(color.red,   0), size=size.tiny)
plotshape(kv_debug_events and kv15_evt_bull_once, title="KV15 bull", style=shape.triangleup,   location=location.bottom,   color=color.new(color.green, 0), size=size.tiny)

// ----- State 5m -----
var box   kv5_bear_box = na
var box   kv5_bull_box = na
var float kv5_bear_top = na
var float kv5_bear_bot = na
var float kv5_bull_top = na
var float kv5_bull_bot = na
var int   kv5_bear_seq = na
var int   kv5_bull_seq = na
var label kv5_bear_lbl = na
var label kv5_bull_lbl = na

// ----- State 15m -----
var box   kv15_bear_box = na
var box   kv15_bull_box = na
var float kv15_bear_top = na
var float kv15_bear_bot = na
var float kv15_bull_top = na
var float kv15_bull_bot = na
var int   kv15_bear_seq = na
var int   kv15_bull_seq = na
var label kv15_bear_lbl = na
var label kv15_bull_lbl = na

// Helpers để set màu hiển thị theo TF
f_box_colors(_isActive, _bull) =>
    col = _bull ? color.green : color.red
    [color.new(col, _isActive ? 0 : 100), color.new(col, _isActive ? kv_zone_alpha : 100)]

// ===== Draw 5m =====
if kv_show_zones and confirm_htf
    // Bear 5m
    if kv5_evt_bear_once
        float top = math.max(kv5_high_htf, kv5_swing_hi) + kv5_atr * kv_pad_bear_atr
        float bot = top - kv5_atr * kv_zone_atr
        bool  can_new = na(kv5_bear_seq) or (kv5_seq - kv5_bear_seq >= throttle_bars)
        if can_new
            if not na(kv5_bear_box)
                box.delete(kv5_bear_box), kv5_bear_box := na
                if not na(kv5_bear_lbl)
                    label.delete(kv5_bear_lbl), kv5_bear_lbl := na
            kv5_bear_top := top, kv5_bear_bot := bot, kv5_bear_seq := kv5_seq
            kv5_bear_box := box.new(left=bar_index, top=top, right=bar_index + kv_zone_extend, bottom=bot)
            [bcol, bg] = f_box_colors(not show_15, false)
            box.set_border_color(kv5_bear_box, bcol), box.set_bgcolor(kv5_bear_box, bg)
            if kv_show_labels
                kv5_bear_lbl := label.new(bar_index, top, "KV 5m (Bear)", style=label.style_label_down, textcolor=color.red, color=color.new(color.red, not show_15 ? 90 : 100), size=size.tiny)
    else if not na(kv5_bear_box)
        box.set_right(kv5_bear_box, bar_index + kv_zone_extend)

    // Bull 5m
    if kv5_evt_bull_once
        float bot = math.min(kv5_low_htf, kv5_swing_lo) - kv5_atr * kv_pad_bull_atr
        float top = bot + kv5_atr * kv_zone_atr
        bool  can_new = na(kv5_bull_seq) or (kv5_seq - kv5_bull_seq >= throttle_bars)
        if can_new
            if not na(kv5_bull_box)
                box.delete(kv5_bull_box), kv5_bull_box := na
                if not na(kv5_bull_lbl)
                    label.delete(kv5_bull_lbl), kv5_bull_lbl := na
            kv5_bull_bot := bot, kv5_bull_top := top, kv5_bull_seq := kv5_seq
            kv5_bull_box := box.new(left=bar_index, top=top, right=bar_index + kv_zone_extend, bottom=bot)
            [bcol, bg] = f_box_colors(not show_15, true)
            box.set_border_color(kv5_bull_box, bcol), box.set_bgcolor(kv5_bull_box, bg)
            if kv_show_labels
                kv5_bull_lbl := label.new(bar_index, bot, "KV 5m (Bull)", style=label.style_label_up, textcolor=color.green, color=color.new(color.green, not show_15 ? 90 : 100), size=size.tiny)
    else if not na(kv5_bull_box)
        box.set_right(kv5_bull_box, bar_index + kv_zone_extend)

// Update label positions + visibility 5m
if kv_show_zones and kv_show_labels
    if not na(kv5_bear_lbl)
        label.set_x(kv5_bear_lbl, bar_index), label.set_y(kv5_bear_lbl, kv5_bear_top), label.set_color(kv5_bear_lbl, color.new(color.red, not show_15 ? 90 : 100))
    if not na(kv5_bull_lbl)
        label.set_x(kv5_bull_lbl, bar_index), label.set_y(kv5_bull_lbl, kv5_bull_bot), label.set_color(kv5_bull_lbl, color.new(color.green, not show_15 ? 90 : 100))

// Max age 5m
if kv_show_zones and kv_max_age_htf > 0
    if not na(kv5_bear_seq) and (kv5_seq - kv5_bear_seq > kv_max_age_htf)
        if not na(kv5_bear_box)
            box.delete(kv5_bear_box)
        if not na(kv5_bear_lbl)
            label.delete(kv5_bear_lbl)
        kv5_bear_box := na, kv5_bear_lbl := na, kv5_bear_top := na, kv5_bear_bot := na, kv5_bear_seq := na
    if not na(kv5_bull_seq) and (kv5_seq - kv5_bull_seq > kv_max_age_htf)
        if not na(kv5_bull_box)
            box.delete(kv5_bull_box)
        if not na(kv5_bull_lbl)
            label.delete(kv5_bull_lbl)
        kv5_bull_box := na, kv5_bull_lbl := na, kv5_bull_top := na, kv5_bull_bot := na, kv5_bull_seq := na

// ===== Draw 15m =====
if kv_show_zones and confirm_htf
    // Bear 15m
    if kv15_evt_bear_once
        top = math.max(kv15_high_htf, kv15_swing_hi) + kv15_atr * kv_pad_bear_atr
        bot = top - kv15_atr * kv_zone_atr
        can_new = na(kv15_bear_seq) or (kv15_seq - kv15_bear_seq >= throttle_bars)
        if can_new
            if not na(kv15_bear_box)
                box.delete(kv15_bear_box), kv15_bear_box := na
                if not na(kv15_bear_lbl)
                    label.delete(kv15_bear_lbl), kv15_bear_lbl := na
            kv15_bear_top := top, kv15_bear_bot := bot, kv15_bear_seq := kv15_seq
            kv15_bear_box := box.new(left=bar_index, top=top, right=bar_index + kv_zone_extend, bottom=bot)
            [bcol, bg] = f_box_colors(show_15, false)
            box.set_border_color(kv15_bear_box, bcol), box.set_bgcolor(kv15_bear_box, bg)
            if kv_show_labels
                kv15_bear_lbl := label.new(bar_index, top, "KV 15m (Bear)", style=label.style_label_down, textcolor=color.red, color=color.new(color.red, show_15 ? 90 : 100), size=size.tiny)
    else if not na(kv15_bear_box)
        box.set_right(kv15_bear_box, bar_index + kv_zone_extend)

    // Bull 15m
    if kv15_evt_bull_once
        bot = math.min(kv15_low_htf, kv15_swing_lo) - kv15_atr * kv_pad_bull_atr
        top = bot + kv15_atr * kv_zone_atr
        can_new = na(kv15_bull_seq) or (kv15_seq - kv15_bull_seq >= throttle_bars)
        if can_new
            if not na(kv15_bull_box)
                box.delete(kv15_bull_box), kv15_bull_box := na
                if not na(kv15_bull_lbl)
                    label.delete(kv15_bull_lbl), kv15_bull_lbl := na
            kv15_bull_bot := bot, kv15_bull_top := top, kv15_bull_seq := kv15_seq
            kv15_bull_box := box.new(left=bar_index, top=top, right=bar_index + kv_zone_extend, bottom=bot)
            [bcol, bg] = f_box_colors(show_15, true)
            box.set_border_color(kv15_bull_box, bcol), box.set_bgcolor(kv15_bull_box, bg)
            if kv_show_labels
                kv15_bull_lbl := label.new(bar_index, bot, "KV 15m (Bull)", style=label.style_label_up, textcolor=color.green, color=color.new(color.green, show_15 ? 90 : 100), size=size.tiny)
    else if not na(kv15_bull_box)
        box.set_right(kv15_bull_box, bar_index + kv_zone_extend)

// Update label positions + visibility 15m
if kv_show_zones and kv_show_labels
    if not na(kv15_bear_lbl)
        label.set_x(kv15_bear_lbl, bar_index), label.set_y(kv15_bear_lbl, kv15_bear_top), label.set_color(kv15_bear_lbl, color.new(color.red, show_15 ? 90 : 100))
    if not na(kv15_bull_lbl)
        label.set_x(kv15_bull_lbl, bar_index), label.set_y(kv15_bull_lbl, kv15_bull_bot), label.set_color(kv15_bull_lbl, color.new(color.green, show_15 ? 90 : 100))

// Invalidate 15m
if kv_show_zones and kv_zone_invalidate
    if not na(kv15_bear_box) and bar_index > box.get_left(kv15_bear_box) and kv15_close > kv15_bear_top and box.get_right(kv15_bear_box) > bar_index
        box.set_right(kv15_bear_box, bar_index)
    if not na(kv15_bull_box) and bar_index > box.get_left(kv15_bull_box) and kv15_close < kv15_bull_bot and box.get_right(kv15_bull_box) > bar_index
        box.set_right(kv15_bull_box, bar_index)

// Invalidate 5m (bổ sung cho đủ cặp với 15m)
if kv_show_zones and kv_zone_invalidate
    if not na(kv5_bear_box) and bar_index > box.get_left(kv5_bear_box) and kv5_close > kv5_bear_top and box.get_right(kv5_bear_box) > bar_index
        box.set_right(kv5_bear_box, bar_index)
    if not na(kv5_bull_box) and bar_index > box.get_left(kv5_bull_box) and kv5_close < kv5_bull_bot and box.get_right(kv5_bull_box) > bar_index
        box.set_right(kv5_bull_box, bar_index)

// ========== END KV CORE ==========
// ========== BUY/SELL SIGNALS ==========

// Khai báo series cho tín hiệu ở global scope để có thể plot ngoài if
var bool buy_signal  = false
var bool sell_signal = false

if sig_show
    // chọn KV đang active theo TF chart
    bool act_is15      = timeframe.in_seconds(timeframe.period) >= timeframe.in_seconds("15")
    float act_bear_top = act_is15 ? kv15_bear_top : kv5_bear_top
    float act_bear_bot = act_is15 ? kv15_bear_bot : kv5_bear_bot
    float act_bull_top = act_is15 ? kv15_bull_top : kv5_bull_top
    float act_bull_bot = act_is15 ? kv15_bull_bot : kv5_bull_bot
    float act_atr      = act_is15 ? kv15_atr      : kv5_atr

    // volume filter
    float vol_ma = ta.sma(volume, lookback)
    bool  vol_ok = not sig_use_volume or (volume > vol_ma * vol_multiplier)

    // nến hiện tại
    float body  = math.abs(close - open)
    float upW   = high - math.max(open, close)
    float dnW   = math.min(open, close) - low
    bool  body_ok = body >= nz(act_atr, ta.atr(kv_atr_len)) * sig_min_body_atr

    // ở trong vùng?
    bool in_bull_zone = not na(act_bull_top) and not na(act_bull_bot) and high >= act_bull_bot and low <= act_bull_top
    bool in_bear_zone = not na(act_bear_top) and not na(act_bear_bot) and high >= act_bear_bot and low <= act_bear_top

    // mẫu đảo chiều
    bool bull_reject = (close > open) and (dnW / math.max(body, syminfo.mintick) >= sig_wick_rej_mult)
    bool bear_reject = (close < open) and (upW / math.max(body, syminfo.mintick) >= sig_wick_rej_mult)

    // breakout mép vùng (nếu không bắt buộc retest)
    bool bull_break = not na(act_bull_top) and ta.crossover(close, act_bull_top)
    bool bear_break = not na(act_bear_bot) and ta.crossunder(close, act_bear_bot)

    bool bull_setup = (sig_retest_only ? (in_bull_zone and bull_reject) : ((in_bull_zone and bull_reject) or bull_break)) and body_ok and vol_ok
    bool bear_setup = (sig_retest_only ? (in_bear_zone and bear_reject) : ((in_bear_zone and bear_reject) or bear_break)) and body_ok and vol_ok

    // throttle
    bool can_b = na(last_b_bar) or (bar_index - last_b_bar >= sig_throttle_bars)
    bool can_s = na(last_s_bar) or (bar_index - last_s_bar >= sig_throttle_bars)

    // Gán ra series đã khai báo
    buy_signal  := bull_setup and can_b
    sell_signal := bear_setup and can_s

    if buy_signal
        last_b_bar := bar_index
    if sell_signal
        last_s_bar := bar_index

// Vẽ ở global scope để tránh lỗi "Cannot use 'plotshape' in local scope"
plotshape(sig_show and buy_signal,  title="B", style=shape.triangleup,   location=location.belowbar, color=color.lime, text="B", size=size.small)
plotshape(sig_show and sell_signal, title="S", style=shape.triangledown, location=location.abovebar, color=color.red,  text="S", size=size.small)
// ========== END BUY/SELL SIGNALS ==========