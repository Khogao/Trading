// © Charlie Expert Analysis
// BTC Day Trading VSA Pro+ Enhanced - Complete Professional System
// Comprehensive VSA with BC/SC confirmation system, CVD divergence detection
// Visual presentation optimized for day trading Bitcoin markets
//@version=5
indicator("BTC VSA Pro+ Complete", shorttitle="PiLite Pro", overlay=true, max_labels_count=100)

// =================== CORE PHILOSOPHY ===================
// Visual Flow: Pattern → Monitoring → Confirmation → Action
// 1. BC/SC appear on original bars with comprehensive monitoring
// 2. Be/Se exhaustion signals (💨) appear when confirmed with Pi Lite style presentation
// 3. CVD divergences provide early warnings at pivot points
// 4. Professional analysis engine with simple user interface
// 5. Optimized for Bitcoin day trading with institutional-grade accuracy


// =================== ESSENTIAL INPUTS ===================
var string GRP_CORE = "🎯 Core Settings"
showDashboard = input.bool(true, "Show Dashboard", group=GRP_CORE)
showConfirmations = input.bool(true, "Show BC/SC Exhaustion Confirmations", group=GRP_CORE)
showCVDDivergence = input.bool(true, "Show CVD Divergence Alerts", group=GRP_CORE)
alertsEnabled = input.bool(true, "Enable Alerts", group=GRP_CORE)

var string GRP_TREND = "📈 Trend Filter"
trendLength = input.int(21, "EMA Length (Trend)", minval=10, maxval=50, group=GRP_TREND)
trendColor = input.color(color.yellow, "Trend Line Color", group=GRP_TREND)
useTrendFilter = input.bool(true, "Apply Trend Filter to Signals", group=GRP_TREND)

var string GRP_VSA = "🔍 VSA Parameters"
volumePeriod = input.int(14, "Volume Average Period", minval=5, maxval=30, group=GRP_VSA)
volumeMultiplier = input.float(2.0, "High Volume Threshold", minval=1.5, maxval=4.0, step=0.1, group=GRP_VSA)
ultraVolumeMultiplier = input.float(3.5, "Ultra High Volume Threshold", minval=2.5, maxval=5.0, step=0.1, group=GRP_VSA)
lowVolumeMultiplier = input.float(0.6, "Low Volume Threshold", minval=0.3, maxval=0.8, step=0.1, group=GRP_VSA)
swingLength = input.int(12, "Swing High/Low Length", minval=8, maxval=20, group=GRP_VSA)
recoveryPercent = input.float(0.25, "Spring/Upthrust Recovery %", minval=0.15, maxval=0.50, step=0.05, group=GRP_VSA)
narrowRangeFactor = input.float(0.7, "Narrow Range Factor", minval=0.5, maxval=0.9, step=0.05, group=GRP_VSA)
wideRangeFactor = input.float(1.4, "Wide Range Factor", minval=1.2, maxval=2.0, step=0.1, group=GRP_VSA)

var string GRP_CONFIRM = "✅ Exhaustion Confirmation Settings"
confirmationBars = input.int(3, "Bars for BC/SC Confirmation", minval=2, maxval=8, group=GRP_CONFIRM, tooltip="Number of bars to monitor after BC/SC for exhaustion confirmation")
cvdLength = input.int(14, "CVD Smoothing Length", minval=5, maxval=21, group=GRP_CONFIRM)
divergenceLookback = input.int(20, "Divergence Detection Lookback", minval=10, maxval=50, group=GRP_CONFIRM)
minDivergenceStrength = input.float(0.5, "Min Divergence Strength %", minval=0.2, maxval=2.0, step=0.1, group=GRP_CONFIRM)

// =================== TREND ANALYSIS ===================
// Professional trend analysis using single EMA for clarity and speed
trendEMA = ta.ema(close, trendLength)
isBullTrend = close > trendEMA
isBearTrend = close < trendEMA
trendStrength = math.abs(close - trendEMA) / trendEMA * 100

// Visual trend line for market context
plot(trendEMA, "Trend EMA", trendColor, 2)

// =================== VOLUME & RANGE ANALYSIS ===================
// Sophisticated volume analysis calibrated for cryptocurrency market dynamics
volumeAvg = ta.sma(volume, volumePeriod)
isHighVolume = volume > volumeAvg * volumeMultiplier
isUltraHighVolume = volume > volumeAvg * ultraVolumeMultiplier
isLowVolume = volume < volumeAvg * lowVolumeMultiplier

// Price range analysis for precise bar characterization in volatile crypto markets
priceRange = high - low
rangeAvg = ta.sma(priceRange, volumePeriod)
isWideRange = priceRange > rangeAvg * wideRangeFactor
isNarrowRange = priceRange < rangeAvg * narrowRangeFactor

// Close location analysis - fundamental to VSA interpretation in any market
closeLocation = priceRange > 0 ? (close - low) / priceRange : 0.5
bullishClose = closeLocation > 0.65  // Close in upper 35% indicates buying strength
bearishClose = closeLocation < 0.35  // Close in lower 35% indicates selling pressure
neutralClose = closeLocation >= 0.35 and closeLocation <= 0.65

// Bar direction classification for momentum analysis
isUpBar = close > open
isDownBar = close < open
isDoji = math.abs(close - open) < (priceRange * 0.1)

// =================== SWING POINTS & MARKET STRUCTURE ===================
// Critical levels identification for Spring/Upthrust pattern recognition
swingHigh = ta.highest(high, swingLength)
swingLow = ta.lowest(low, swingLength)

// Breakout detection with market structure context
higherHigh = high > swingHigh[1]
lowerLow = low < swingLow[1]

// Average True Range for positioning visual elements proportionally
atr = ta.atr(14)

// =================== CVD CALCULATION & MOMENTUM ANALYSIS ===================
// Professional Cumulative Volume Delta using TradingView's institutional-grade data
// This provides accurate order flow analysis with real tick-by-tick volume delta

// CVD Configuration optimized for crypto trading
var string GRP_CVD_ADV = "🔊 Advanced CVD Settings"
cvdAnchorPeriod = input.timeframe("1D", "CVD Anchor Period", group=GRP_CVD_ADV)
useCustomCVDTimeframe = input.bool(false, "Use Custom CVD Timeframe", group=GRP_CVD_ADV)
customCVDTimeframe = input.timeframe("1", "CVD Data Timeframe", group=GRP_CVD_ADV)

// Dynamic timeframe selection for optimal CVD precision
cvdDataTimeframe = switch
    useCustomCVDTimeframe => customCVDTimeframe
    timeframe.isseconds   => "1S"
    timeframe.isintraday  => "1"
    timeframe.isdaily     => "5"
    => "60"


// CVD calculation (approximation, since ta.requestVolumeDelta is not available)
var float volumeDelta = na
var float cvd = na
var float volumeVelocity = na
var float volumeAcceleration = na
var float momentumFactor = na

// Calculate moving averages and cumulative sum on each calculation
volumeSMA5 = ta.sma(volume, 5)

volumeVelocity := (volume - volumeSMA5) / math.max(volumeSMA5, 1) * 100
volumeAcceleration := volumeVelocity - nz(volumeVelocity[1], 0)
momentumFactor := 1.0 + math.max(-0.5, math.min(0.5, volumeVelocity * 0.003 + volumeAcceleration * 0.001))

if isUpBar
    volumeDelta := volume * (0.5 + closeLocation * 0.5) * momentumFactor
else if isDownBar
    volumeDelta := -volume * (0.5 + (1 - closeLocation) * 0.5) * momentumFactor
else
    volumeDelta := volume * (closeLocation - 0.5) * 0.1 * momentumFactor

cvd := ta.cum(volumeDelta)


// CVD smoothing and trend analysis optimized for Bitcoin volatility
cvdSmooth = ta.ema(cvd, cvdLength)

// Enhanced CVD momentum analysis with institutional-grade precision
cvdMomentum = cvd - cvd[1]
cvdMomentumSmooth = ta.ema(cvdMomentum, 3)
cvdRising = cvdSmooth > cvdSmooth[1] and cvdMomentumSmooth > 0
cvdFalling = cvdSmooth < cvdSmooth[1] and cvdMomentumSmooth < 0
cvdFlat = math.abs(cvdSmooth - cvdSmooth[1]) < math.abs(cvdSmooth) * 0.001

// =================== DIVERGENCE DETECTION SYSTEM ===================
// Advanced divergence detection between Price action and CVD momentum
// This provides early warning signals 2-5 bars before major reversals

// Identify significant pivot points using built-in pivot detection
priceHighsForDiv = ta.pivothigh(high, 3, 3)
priceLowsForDiv = ta.pivotlow(low, 3, 3)

// State variables to track recent pivots and their corresponding CVD values
var float lastPriceHigh = na
var float lastPriceLow = na  
var float lastCVDAtPriceHigh = na
var float lastCVDAtPriceLow = na
var int lastHighBar = na
var int lastLowBar = na

// Update pivot tracking system when new confirmed pivots appear
if not na(priceHighsForDiv)
    lastPriceHigh := priceHighsForDiv
    lastCVDAtPriceHigh := cvdSmooth[3]  // CVD value at the exact pivot bar
    lastHighBar := bar_index[3]

if not na(priceLowsForDiv)
    lastPriceLow := priceLowsForDiv
    lastCVDAtPriceLow := cvdSmooth[3]   // CVD value at the exact pivot bar  
    lastLowBar := bar_index[3]

// Initialize divergence detection variables
bearishDivergence = false
bullishDivergence = false

// Bearish divergence detection: Price makes higher high while CVD makes lower high
if not na(priceHighsForDiv) and not na(lastPriceHigh) and not na(lastCVDAtPriceHigh)
    currentCVDAtHigh = cvdSmooth[3]
    priceHigherHigh = priceHighsForDiv > lastPriceHigh
    cvdLowerHigh = currentCVDAtHigh < lastCVDAtPriceHigh
    
    // Calculate divergence strength to filter out weak signals
    priceChange = (priceHighsForDiv - lastPriceHigh) / lastPriceHigh * 100
    cvdChange = (currentCVDAtHigh - lastCVDAtPriceHigh) / math.abs(lastCVDAtPriceHigh) * 100
    
    // Validation criteria: proper time spacing and sufficient signal strength
    timeBetweenPivots = bar_index[3] - lastHighBar
    sufficientTimeGap = timeBetweenPivots >= 5 and timeBetweenPivots <= divergenceLookback
    sufficientStrength = priceChange > minDivergenceStrength and math.abs(cvdChange) > minDivergenceStrength
    
    bearishDivergence := priceHigherHigh and cvdLowerHigh and sufficientTimeGap and sufficientStrength

// Bullish divergence detection: Price makes lower low while CVD makes higher low
if not na(priceLowsForDiv) and not na(lastPriceLow) and not na(lastCVDAtPriceLow)
    currentCVDAtLow = cvdSmooth[3]
    priceLowerLow = priceLowsForDiv < lastPriceLow
    cvdHigherLow = currentCVDAtLow > lastCVDAtPriceLow
    
    // Calculate divergence strength for signal validation
    priceChange = (lastPriceLow - priceLowsForDiv) / lastPriceLow * 100
    cvdChange = (currentCVDAtLow - lastCVDAtPriceLow) / math.abs(lastCVDAtPriceLow) * 100
    
    // Validation criteria: proper time spacing and sufficient signal strength
    timeBetweenPivots = bar_index[3] - lastLowBar
    sufficientTimeGap = timeBetweenPivots >= 5 and timeBetweenPivots <= divergenceLookback
    sufficientStrength = priceChange > minDivergenceStrength and math.abs(cvdChange) > minDivergenceStrength
    
    bullishDivergence := priceLowerLow and cvdHigherLow and sufficientTimeGap and sufficientStrength

// =================== PRIMARY VSA PATTERNS ===================
// Core VSA patterns optimized for Bitcoin market characteristics

// 1. SPRING PATTERN - High Priority Bullish Reversal Signal
// Occurs when price breaks below support with high volume but quickly recovers
springCondition1 = lowerLow and isHighVolume 
springCondition2 = low < swingLow[1] and close > low * (1 + recoveryPercent/100)
springCondition3 = bullishClose or neutralClose
trendValidSpring = not useTrendFilter or isBullTrend or trendStrength < 2.0
isSpring = springCondition1 and springCondition2 and springCondition3 and trendValidSpring

// 2. UPTHRUST PATTERN - High Priority Bearish Reversal Signal  
// Occurs when price breaks above resistance with high volume but gets rejected
upthrustCondition1 = higherHigh and isHighVolume
upthrustCondition2 = high > swingHigh[1] and close < high * (1 - recoveryPercent/100)
upthrustCondition3 = bearishClose or neutralClose
trendValidUpthrust = not useTrendFilter or isBearTrend or trendStrength < 2.0
isUpthrust = upthrustCondition1 and upthrustCondition2 and upthrustCondition3 and trendValidUpthrust

// 3. BUYING CLIMAX (BC) - Potential Exhaustion at Market Tops
// Ultra high volume up bar with poor close near recent highs
buyingClimaxCondition1 = isUltraHighVolume and isWideRange and isUpBar
buyingClimaxCondition2 = bearishClose or neutralClose
buyingClimaxCondition3 = high >= ta.highest(high, swingLength * 2)[1] // Near recent highs
trendValidBC = not useTrendFilter or isBearTrend or (isBullTrend and trendStrength > 3.0)
isBuyingClimax = buyingClimaxCondition1 and buyingClimaxCondition2 and buyingClimaxCondition3 and trendValidBC

// 4. SELLING CLIMAX (SC) - Potential Exhaustion at Market Bottoms
// Ultra high volume down bar with good close near recent lows
sellingClimaxCondition1 = isUltraHighVolume and isWideRange and isDownBar
sellingClimaxCondition2 = bullishClose or neutralClose  
sellingClimaxCondition3 = low <= ta.lowest(low, swingLength * 2)[1] // Near recent lows
trendValidSC = not useTrendFilter or isBullTrend or (isBearTrend and trendStrength > 3.0)
isSellingClimax = sellingClimaxCondition1 and sellingClimaxCondition2 and sellingClimaxCondition3 and trendValidSC

// =================== BC/SC EXHAUSTION CONFIRMATION SYSTEM ===================
// Comprehensive professional-grade exhaustion tracking system
// Maintains sophisticated analysis while presenting results in Pi Lite style

// State variables to track pending confirmations with detailed monitoring
var bool bcPending = false
var bool scPending = false
var int bcBarIndex = na
var int scBarIndex = na
var float bcHighPrice = na
var float scLowPrice = na
var float bcVolumeLevel = na
var float scVolumeLevel = na

// Initialize BC tracking when Buying Climax pattern occurs
if isBuyingClimax and not bcPending
    bcPending := true
    bcBarIndex := bar_index
    bcHighPrice := high
    bcVolumeLevel := volume

// Initialize SC tracking when Selling Climax pattern occurs  
if isSellingClimax and not scPending
    scPending := true
    scBarIndex := bar_index
    scLowPrice := low
    scVolumeLevel := volume

// BC Exhaustion Confirmation Logic - Comprehensive Multi-Criteria Analysis
bcConfirmed = false
var float highestSinceBC = na
var float avgVolumeSinceBC = na
var float avgVolumeBeforeBC = na
if bcPending and not na(bcBarIndex)
    barsPassedBC = bar_index - bcBarIndex
    if barsPassedBC >= confirmationBars
        if not na(barsPassedBC)
            highestSinceBC := ta.highest(high, barsPassedBC)
            avgVolumeSinceBC := ta.sma(volume, barsPassedBC)
            avgVolumeBeforeBC := ta.sma(volume[barsPassedBC], confirmationBars)
            // Analyze subsequent price action quality for weakness confirmation
            bearishCloseCount = 0
            weakRallyCount = 0
            for i = 1 to barsPassedBC
                barCloseLocation = (close[i] - low[i]) / math.max(high[i] - low[i], syminfo.mintick)
                if barCloseLocation < 0.5
                    bearishCloseCount += 1
                if high[i] < high[i-1] and close[i] > open[i]  // Failed rally attempts
                    weakRallyCount += 1
            // Comprehensive confirmation conditions
            noSignificantNewHighs = highestSinceBC <= bcHighPrice * 1.008  // Allow minimal 0.8% tolerance
            volumeDeclined = avgVolumeSinceBC < bcVolumeLevel * 0.7
            dominantBearishAction = bearishCloseCount >= math.round(barsPassedBC * 0.4)
            cvdConfirmation = not cvdRising or cvdFalling  // CVD not rising or actively falling
            if noSignificantNewHighs and (volumeDeclined or dominantBearishAction) and cvdConfirmation
                bcConfirmed := true
                bcPending := false

// SC Exhaustion Confirmation Logic - Comprehensive Multi-Criteria Analysis
scConfirmed = false
var float lowestSinceSC = na
var float avgVolumeSinceSC = na
var float avgVolumeBeforeSC = na
if scPending and not na(scBarIndex)
    barsPassedSC = bar_index - scBarIndex
    if barsPassedSC >= confirmationBars
        if not na(barsPassedSC)
            lowestSinceSC := ta.lowest(low, barsPassedSC)
            avgVolumeSinceSC := ta.sma(volume, barsPassedSC)
            avgVolumeBeforeSC := ta.sma(volume[barsPassedSC], confirmationBars)
            // Analyze subsequent price action quality for strength confirmation
            bullishCloseCount = 0
            strongBounceCount = 0
            for i = 1 to barsPassedSC
                barCloseLocation = (close[i] - low[i]) / math.max(high[i] - low[i], syminfo.mintick)
                if barCloseLocation > 0.5
                    bullishCloseCount += 1
                if low[i] > low[i-1] and close[i] < open[i]  // Failed breakdown attempts
                    strongBounceCount += 1
            // Comprehensive confirmation conditions
            noSignificantNewLows = lowestSinceSC >= scLowPrice * 0.992  // Allow minimal 0.8% tolerance
            volumeDeclined = avgVolumeSinceSC < scVolumeLevel * 0.7
            dominantBullishAction = bullishCloseCount >= math.round(barsPassedSC * 0.4)
            cvdConfirmation = not cvdFalling or cvdRising  // CVD not falling or actively rising
            if noSignificantNewLows and (volumeDeclined or dominantBullishAction) and cvdConfirmation
                scConfirmed := true
                scPending := false

// Reset pending flags if confirmation window expires without confirmation
if bcPending and not na(bcBarIndex) and (bar_index - bcBarIndex) > confirmationBars * 3
    bcPending := false
    
if scPending and not na(scBarIndex) and (bar_index - scBarIndex) > confirmationBars * 3
    scPending := false

// Pi Lite style aliases for clean visual presentation while maintaining analytical depth
Be = bcConfirmed  // Buying Exhaustion (professionally confirmed BC exhaustion)
Se = scConfirmed  // Selling Exhaustion (professionally confirmed SC exhaustion)

// =================== SECONDARY VSA PATTERNS ===================
// Supporting patterns that provide additional market context and confirmation

// 5. STOPPING VOLUME (STV) - Volume Halts Price Decline
// High volume down bar with good close that doesn't make new lows
stoppingVolumeCondition1 = isDownBar and isHighVolume and not isWideRange
stoppingVolumeCondition2 = bullishClose and closeLocation > 0.6
stoppingVolumeCondition3 = low > ta.lowest(low, swingLength)[2] // Not making new lows
trendValidSTV = not useTrendFilter or isBullTrend
isStoppingVolume = stoppingVolumeCondition1 and stoppingVolumeCondition2 and stoppingVolumeCondition3 and trendValidSTV

// 6. SIGN OF STRENGTH (SOS) - Strong Demand Emergence
// High volume up bar with excellent close breaking above recent highs
sosCondition1 = isUpBar and isHighVolume
sosCondition2 = bullishClose and closeLocation > 0.7
sosCondition3 = close > ta.highest(close, 5)[1] // Breaking above recent highs
trendValidSOS = not useTrendFilter or isBullTrend
isSOS = sosCondition1 and sosCondition2 and sosCondition3 and trendValidSOS

// 7. SIGN OF WEAKNESS (SOW) - Distribution and Selling Pressure
// High volume down bar with poor close breaking below recent lows
sowCondition1 = isDownBar and isHighVolume  
sowCondition2 = bearishClose and closeLocation < 0.3
sowCondition3 = close < ta.lowest(close, 5)[1] // Breaking below recent lows
trendValidSOW = not useTrendFilter or isBearTrend
isSOW = sowCondition1 and sowCondition2 and sowCondition3 and trendValidSOW

// 8. TEST BAR - Testing Key Levels with Minimal Volume
// Low volume narrow range bar testing support or resistance with reversal close
testBarCondition1 = isLowVolume and isNarrowRange
testBarCondition2 = (isDownBar and bullishClose) or (isUpBar and bearishClose)
testBarCondition3 = not (isSpring or isUpthrust) // Avoid confusion with major patterns
testSupport = isDownBar and low <= ta.lowest(low, swingLength)[1] and closeLocation > 0.5
testResistance = isUpBar and high >= ta.highest(high, swingLength)[1] and closeLocation < 0.5
isTestBar = testBarCondition1 and testBarCondition2 and testBarCondition3 and (testSupport or testResistance)

// 9. NO DEMAND - Weakness on Upward Price Movement
// Up bar with low volume and poor close indicating lack of buying interest
noDemandCondition1 = isUpBar and isLowVolume
noDemandCondition2 = bearishClose or neutralClose
noDemandCondition3 = not isNarrowRange // Must have meaningful range
trendValidND = not useTrendFilter or isBearTrend
isNoDemand = noDemandCondition1 and noDemandCondition2 and noDemandCondition3 and trendValidND

// 10. NO SUPPLY - Strength on Downward Price Movement
// Down bar with low volume and good close indicating lack of selling pressure
noSupplyCondition1 = isDownBar and isLowVolume
noSupplyCondition2 = bullishClose or neutralClose
noSupplyCondition3 = not isNarrowRange // Must have meaningful range
trendValidNS = not useTrendFilter or isBullTrend
isNoSupply = noSupplyCondition1 and noSupplyCondition2 and noSupplyCondition3 and trendValidNS

// =================== SIGNAL PRIORITIZATION & SCORING ===================
// Professional hierarchical scoring system with confirmation bonuses and divergence adjustments

signalScore = 0.0

// PRIMARY PATTERNS (Highest Weight) - Core reversal and continuation signals
if isSpring
    signalScore += 4.0
if isUpthrust  
    signalScore -= 4.0
if isSellingClimax
    signalScore += 3.5
if isBuyingClimax
    signalScore -= 3.5

// SECONDARY PATTERNS (Medium Weight) - Momentum and volume confirmation signals
if isStoppingVolume
    signalScore += 2.5
if isSOS
    signalScore += 2.0
if isSOW
    signalScore -= 2.0

// TERTIARY PATTERNS (Lower Weight) - Supporting and continuation signals
if isTestBar and testSupport
    signalScore += 1.5
if isTestBar and testResistance
    signalScore -= 1.5
if isNoSupply
    signalScore += 1.0
if isNoDemand
    signalScore -= 1.0

// EXHAUSTION CONFIRMATION BONUSES (Highest Priority) - Professional confirmation signals
if Be
    signalScore -= 5.0  // Strongest bearish signal when buying exhaustion confirmed
if Se
    signalScore += 5.0  // Strongest bullish signal when selling exhaustion confirmed

// CVD DIVERGENCE ADJUSTMENTS - Risk management through momentum analysis
if bearishDivergence and signalScore > 0
    signalScore *= 0.5  // Reduce bullish confidence when bearish divergence present
if bullishDivergence and signalScore < 0
    signalScore *= 0.5  // Reduce bearish confidence when bullish divergence present

// Trend alignment bonus for strong signals - Enhanced confidence when aligned with trend
if math.abs(signalScore) > 2.0
    if isBullTrend and signalScore > 0
        signalScore *= 1.15
    if isBearTrend and signalScore < 0  
        signalScore *= 1.15

// =================== CLEAN TEXT-BASED SIGNALS WITH TREND COLOR CODING ===================
// Professional visual system optimized for quick recognition and minimal chart clutter


// PRIMARY PATTERNS - 2-character abbreviations, always shown
plotchar(isSpring, "Spring", "SP", location.belowbar, color.green, size=size.small)
plotchar(isUpthrust, "Upthrust", "UT", location.abovebar, color.red, size=size.small)
plotchar(isSellingClimax, "Selling Climax", "SC", location.belowbar, color.green, size=size.small)
plotchar(isBuyingClimax, "Buying Climax", "BC", location.abovebar, color.red, size=size.small)

// EXHAUSTION CONFIRMATIONS - Pi Lite style 💨 icons with professional confirmation logic (reduced size)
plotchar(Be and showConfirmations, "Buying Exhausted", "💨", location.abovebar, color.red, size=size.small)
plotchar(Se and showConfirmations, "Selling Exhausted", "💨", location.belowbar, color.green, size=size.small)

// CVD DIVERGENCE SIGNALS - Early warning system with distinctive markers (reduced size)
plotchar(bearishDivergence and showCVDDivergence, "Bearish Divergence", "⚠", location.abovebar, color.purple, size=size.small)
plotchar(bullishDivergence and showCVDDivergence, "Bullish Divergence", "⚠", location.belowbar, color.blue, size=size.small)

// SECONDARY & TERTIARY PATTERNS - 2-character abbreviations, always shown
plotchar(isStoppingVolume, "Stopping Volume", "SV", location.belowbar, color.green, size=size.tiny)
plotchar(isSOS, "Sign of Strength", "SO", location.belowbar, color.green, size=size.tiny)
plotchar(isSOW, "Sign of Weakness", "SW", location.abovebar, color.red, size=size.tiny)
plotchar(isTestBar and testSupport, "Test Support", "TS", location.belowbar, color.green, size=size.tiny)
plotchar(isTestBar and testResistance, "Test Resistance", "TR", location.abovebar, color.red, size=size.tiny)
plotchar(isNoSupply, "No Supply", "NS", location.belowbar, color.green, size=size.tiny)
plotchar(isNoDemand, "No Demand", "ND", location.abovebar, color.red, size=size.tiny)

// =================== COMPREHENSIVE PROFESSIONAL DASHBOARD ===================
if showDashboard and barstate.islast
    var table infoTable = table.new(position.top_right, 2, 11, bgcolor=color.new(color.black, 85), border_width=1)
    
    // Header with clear version identification
    table.cell(infoTable, 0, 0, "BTC VSA PRO+", text_color=color.orange, bgcolor=color.black, text_size=size.normal)
    table.cell(infoTable, 1, 0, timeframe.period, text_color=color.white, bgcolor=color.black)
    
    // Trend analysis with strength context for market direction assessment
    table.cell(infoTable, 0, 1, "Trend", text_color=color.white)
    trendText = isBullTrend ? "BULL" : "BEAR" 
    strengthText = trendStrength > 3.0 ? " (Strong)" : trendStrength > 1.0 ? " (Moderate)" : " (Weak)"
    trendCol = isBullTrend ? color.green : color.red
    table.cell(infoTable, 1, 1, trendText + strengthText, text_color=trendCol)
    
    // CVD momentum analysis with directional clarity
    table.cell(infoTable, 0, 2, "CVD", text_color=color.white)
    cvdText = cvdRising ? "RISING" : cvdFalling ? "FALLING" : "FLAT"
    cvdColor = cvdRising ? color.green : cvdFalling ? color.red : color.gray
    table.cell(infoTable, 1, 2, cvdText, text_color=cvdColor)
    
    // Volume analysis with market participation assessment
    table.cell(infoTable, 0, 3, "Volume", text_color=color.white)
    volText = isUltraHighVolume ? "ULTRA" : isHighVolume ? "HIGH" : isLowVolume ? "LOW" : "NORMAL"
    volColor = isUltraHighVolume ? color.fuchsia : isHighVolume ? color.red : isLowVolume ? color.gray : color.blue
    table.cell(infoTable, 1, 3, volText, text_color=volColor)
    
    // CVD divergence warning system for early reversal detection
    table.cell(infoTable, 0, 4, "Divergence", text_color=color.white)
    divText = bearishDivergence ? "BEARISH" : bullishDivergence ? "BULLISH" : "NONE"
    divColor = bearishDivergence ? color.purple : bullishDivergence ? color.blue : color.gray
    table.cell(infoTable, 1, 4, divText, text_color=divColor)
    
    // Current primary signal identification and classification
    table.cell(infoTable, 0, 5, "Primary Signal", text_color=color.white)
    primarySignal = "NONE"
    primaryColor = color.gray
    
    if isSpring
        primarySignal := "SPRING"
        primaryColor := color.green
    else if isUpthrust
        primarySignal := "UPTHRUST"
        primaryColor := color.red
    else if isSellingClimax
        primarySignal := "SELL CLIMAX"
        primaryColor := color.green
    else if isBuyingClimax
        primarySignal := "BUY CLIMAX"
        primaryColor := color.red
    
    table.cell(infoTable, 1, 5, primarySignal, text_color=primaryColor)
    
    // Exhaustion status tracking with Pi Lite style naming
    table.cell(infoTable, 0, 6, "Exhaustion", text_color=color.white)
    confirmText = "NONE"
    confirmColor = color.gray
    
    if Be
        confirmText := "Be (SELL)"
        confirmColor := color.red
    else if Se
        confirmText := "Se (BUY)"
        confirmColor := color.green
    else if bcPending
        confirmText := "BC WATCH"
        confirmColor := color.orange
    else if scPending
        confirmText := "SC WATCH"
        confirmColor := color.aqua
    
    table.cell(infoTable, 1, 6, confirmText, text_color=confirmColor)
    
    // Secondary signals monitoring and classification
    table.cell(infoTable, 0, 7, "Secondary", text_color=color.white)
    secondarySignal = "NONE"
    secondaryColor = color.gray
    
    if isStoppingVolume
        secondarySignal := "STV"
        secondaryColor := color.green
    else if isSOS
        secondarySignal := "SOS"
        secondaryColor := color.green
    else if isSOW
        secondarySignal := "SOW"
        secondaryColor := color.red
    else if isTestBar
        secondarySignal := "TEST"
        secondaryColor := color.gray
    
    table.cell(infoTable, 1, 7, secondarySignal, text_color=secondaryColor)
    
    // Signal strength assessment with professional grading
    table.cell(infoTable, 0, 8, "Strength", text_color=color.white)
    strengthLevel = math.abs(signalScore) > 4.0 ? "VERY STRONG" : math.abs(signalScore) > 3.0 ? "STRONG" : math.abs(signalScore) > 2.0 ? "MEDIUM" : math.abs(signalScore) > 1.0 ? "WEAK" : "NONE"
    strengthColor = math.abs(signalScore) > 4.0 ? color.yellow : math.abs(signalScore) > 3.0 ? color.orange : math.abs(signalScore) > 2.0 ? color.blue : color.gray
    table.cell(infoTable, 1, 8, strengthLevel, text_color=strengthColor)
    
    // Range analysis for market volatility context
    table.cell(infoTable, 0, 9, "Range", text_color=color.white)
    rangeText = isWideRange ? "WIDE" : isNarrowRange ? "NARROW" : "NORMAL"
    rangeColor = isWideRange ? color.orange : isNarrowRange ? color.gray : color.blue
    table.cell(infoTable, 1, 9, rangeText, text_color=rangeColor)
    
    // Trading recommendation with comprehensive decision logic
    table.cell(infoTable, 0, 10, "Action", text_color=color.white)
    actionText = "WAIT"
    actionColor = color.gray
    
    // Enhanced decision logic incorporating Pi Lite style confirmations
    if Be or (signalScore < -4.0 and not bullishDivergence)
        actionText := "STRONG SELL"
        actionColor := color.red
    else if Se or (signalScore > 4.0 and not bearishDivergence)
        actionText := "STRONG BUY"
        actionColor := color.green
    else if signalScore > 3.0 and not bearishDivergence
        actionText := "BUY"
        actionColor := color.green
    else if signalScore < -3.0 and not bullishDivergence
        actionText := "SELL"
        actionColor := color.red
    else if bearishDivergence or bullishDivergence
        actionText := "CAUTION"
        actionColor := color.yellow
    else if math.abs(signalScore) > 2.0
        actionText := "WATCH"
        actionColor := color.yellow
    
    table.cell(infoTable, 1, 10, actionText, text_color=actionColor)

// =================== COMPREHENSIVE PROFESSIONAL ALERT SYSTEM ===================

// Primary pattern alerts with clear market context
alertcondition(isSpring, "Spring Pattern", "🟢 SPRING pattern detected on {{ticker}} at {{close}} - High probability BUY setup with recovery confirmation")
alertcondition(isUpthrust, "Upthrust Pattern", "🔴 UPTHRUST pattern detected on {{ticker}} at {{close}} - High probability SELL setup with rejection confirmation")
alertcondition(isSellingClimax, "Selling Climax", "🔵 SELLING CLIMAX on {{ticker}} at {{close}} - Potential exhaustion bottom (monitoring for Be confirmation)")
alertcondition(isBuyingClimax, "Buying Climax", "🟠 BUYING CLIMAX on {{ticker}} at {{close}} - Potential exhaustion top (monitoring for Se confirmation)")

// Exhaustion confirmation alerts - Pi Lite style with professional backing
alertcondition(Be, "Be - Buying Exhausted", "🚨 BUYING EXHAUSTION (Be) confirmed on {{ticker}} - BC hết hơi, professional sell signal activated!")
alertcondition(Se, "Se - Selling Exhausted", "🚨 SELLING EXHAUSTION (Se) confirmed on {{ticker}} - SC hết hơi, professional buy signal activated!")

// CVD divergence early warning system for momentum shift detection
alertcondition(bearishDivergence, "CVD Bearish Divergence", "⚠️ BEARISH DIVERGENCE detected on {{ticker}} - Price rising but CVD falling, potential reversal incoming!")
alertcondition(bullishDivergence, "CVD Bullish Divergence", "⚠️ BULLISH DIVERGENCE detected on {{ticker}} - Price falling but CVD rising, potential reversal incoming!")

// Secondary pattern alerts for additional market context
alertcondition(isStoppingVolume, "Stopping Volume", "⚫ STOPPING VOLUME on {{ticker}} - Support level holding with significant volume")
alertcondition(isSOS, "Sign of Strength", "🔷 SIGN OF STRENGTH on {{ticker}} - Demand increasing with momentum building")
alertcondition(isSOW, "Sign of Weakness", "🔶 SIGN OF WEAKNESS on {{ticker}} - Supply increasing with pressure mounting")

// Combined signal strength alerts for high-conviction opportunities
alertcondition(signalScore > 4.0 and not bearishDivergence, "Very Strong Bullish", "🚀 VERY STRONG BULLISH signal on {{ticker}} - Score above 4.0 (No CVD conflict)")
alertcondition(signalScore < -4.0 and not bullishDivergence, "Very Strong Bearish", "📉 VERY STRONG BEARISH signal on {{ticker}} - Score below -4.0 (No CVD conflict)")

// Conflict alerts for risk management when indicators disagree
alertcondition((signalScore > 3.0 and bearishDivergence) or (signalScore < -3.0 and bullishDivergence), "Signal Conflict Warning", "⚠️ SIGNAL CONFLICT on {{ticker}} - VSA vs CVD showing opposite directions. Exercise extreme caution!")

// =================== PROFESSIONAL TRADING FRAMEWORK NOTES ===================
// This comprehensive system provides institutional-grade analysis with retail accessibility:
//
// 1. Multi-Layer Pattern Recognition:
//    - Primary VSA patterns (Spring, Upthrust, BC, SC) for major market turning points
//    - Secondary patterns (SOS, SOW, STV) for momentum and volume confirmation  
//    - Tertiary patterns (Test, NS, ND) for continuation and quality assessment
//
// 2. Professional Confirmation System:
//    - BC/SC exhaustion monitoring with comprehensive multi-criteria analysis
//    - CVD divergence detection for early momentum shift warnings
//    - Trend alignment validation for signal quality assessment
//
// 3. Risk Management Integration:
//    - Hierarchical signal scoring with confirmation bonuses
//    - Conflict detection between price action and momentum indicators
//    - Clear action recommendations based on comprehensive analysis
//
// 4. Visual Design Philosophy:
//    - Clean text-based signals minimize chart clutter while maximizing information
//    - Color coding by market direction improves rapid signal assessment
//    - Pi Lite style exhaustion presentation combines simplicity with analytical depth
//    - Professional appearance suitable for institutional trading environments
//
// 5. Real-Time Trading Applications:
//    - Be/Se exhaustion confirmations provide highest conviction reversal signals
//    - CVD divergences offer 2-5 bar early warnings before major price reversals
//    - Primary VSA patterns identify main entry and exit opportunities
//    - Dashboard delivers complete market assessment in under 3 seconds
//    - Alert system ensures critical signals are never missed during active trading
//
// 6. Bitcoin Market Optimization:
//    - Volume analysis calibrated for 24/7 cryptocurrency market dynamics
//    - Range analysis adapted for Bitcoin volatility characteristics
//    - CVD calculations optimized for crypto order flow patterns
//    - Confirmation timeframes tuned for crypto market speed and efficiency
//
// This system successfully bridges traditional VSA methodology with modern cryptocurrency
// trading requirements, providing both the analytical depth required for professional
// trading and the execution speed necessary for day trading Bitcoin markets.
//
// The combination of comprehensive confirmation logic with Pi Lite visual simplicity
// creates an optimal balance between analytical rigor and practical usability,
// making it suitable for both professional traders requiring detailed analysis
// and retail traders needing clear, actionable signals.